{"version":3,"sources":["worstnightmare.js"],"names":["REMOTE_BASEURL","findWithAttr","layers","attr","value","layer_id","findGeopoiLayer","e","geopoi_url","geopoi_layer","target","_layers","map_layers_array","_map","_syncMaps","map_layer_id","window","location","hostname","Number","prototype","toRad","getTileURL","parseInt","Math","floor","lon","lat","zoom","xtile","log","tan","cos","PI","movemarker","position","getCenter","toFixed","lng","marker_center_left","marker_center_right","setLatLng","ytile","tiles","_zoom","options","text","$","dragstartmarker","xtile_center","ytile_center","setUrl","onLocationFound","radius","accuracy","addTo","gemIcon","L","icon","iconUrl","iconSize","circle","latlng","map","marker","onLocationError","alert","getPositionFromHash","jQuery","arr","hash","split","replace","isNumeric","sParameterName","sParam","sURLVariables","search","substring","length","i","toggleIt","element","slideToggle"],"mappings":"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","file":"worstnightmare.min.js","sourcesContent":["/*!\n * Copyright 2014 Fondazione Bruno Kessler\n * Author: Cristian Consonni\n * Released under the MIT license\n *\n */\nvar REMOTE_BASEURL;\nif ( window.location.hostname === 'localhost' ) {\n    REMOTE_BASEURL = '//localhost:5500/';\n}\nelse {\n    REMOTE_BASEURL = '//reportmap-cristiancantoro.rhcloud.com/';\n}\n \nif ( typeof (Number.prototype.toRad) === \"undefined\" ) {\n  Number.prototype.toRad = function() {\n    return this * Math.PI / 180;\n  };\n}\n\nfunction findWithAttr(layers, attr, value) {\n\n    for ( var layer_id in layers ) {\n        if ( layers[layer_id][attr] === value ) {\n            return layers[layer_id];\n        }\n    }\n}\n\nfunction findGeopoiLayer(e, geopoi_url) {\n    var geopoi_layer = findWithAttr(e.target._layers, \"_url\", geopoi_url);\n\n    if ( typeof (geopoi_layer) === \"undefined\" ) {\n\n        for ( var layer_id in e.target._layers )  {\n\n            var map_layers_array = e.target._layers[layer_id]._map._syncMaps;\n\n            for ( var map_layer_id in map_layers_array ) {\n                geopoi_layer = findWithAttr(map_layers_array[map_layer_id]._layers, \"_url\", geopoi_url);\n                if ( typeof (geopoi_layer) !== \"undefined\" ) {\n                    break;\n                }\n            }\n\n            if ( typeof (geopoi_layer) !== \"undefined\" ) {\n                    break;\n            }\n        }\n\n    }\n\n    return geopoi_layer;\n}\n\nvar getTileURL = function(lat, lon, zoom) {\n  var xtile = parseInt(Math.floor( (Number(lon) + 180) / 360 * (1<<zoom) ), 10);\n  var ytile = parseInt(Math.floor( (1 - Math.log(Math.tan(Number(lat).toRad()) + 1 / Math.cos(Number(lat).toRad())) / Math.PI) / 2 * (1<<zoom) ), 10);\n  return [xtile, ytile];\n};\n\nvar movemarker = function (e) {\n    var geopoi_layer = findWithAttr(e.target._layers, \"_url\", geopoi_url);\n\n    var position = e.target.getCenter();\n    lat = Number(position['lat']).toFixed(5);\n    lng = Number(position['lng']).toFixed(5);\n\n    if (typeof (marker_center_left) !== 'undefined' ) {\n        marker_center_left.setLatLng(position);\n        marker_center_right.setLatLng(position);\n    }\n\n    tiles = getTileURL(lat, lng, e.target._zoom);\n    xtile = tiles[0];\n    ytile = tiles[1];\n\n    geopoi_layer.options.xtile_center = xtile;\n    geopoi_layer.options.ytile_center = ytile;\n    geopoi_layer.setUrl(geopoi_url);\n    \n    $(\"#final-lat\").text(lat);\n    $(\"#final-lon\").text(lng);\n    $(\"#tile-x\").text(xtile);\n    $(\"#tile-y\").text(ytile);\n};\n\nvar dragstartmarker = function(e) {\n    var geopoi_layer = findGeopoiLayer(e, geopoi_url);\n\n    var position = e.target.getCenter();\n    lat = Number(position['lat']).toFixed(5);\n    lng = Number(position['lng']).toFixed(5);\n\n    if (typeof (marker_center_left) !== 'undefined' ) {\n        marker_center_left.setLatLng(position);\n        marker_center_right.setLatLng(position);\n    }\n\n    tiles = getTileURL(lat, lng, e.target._zoom);\n    xtile = tiles[0];\n    ytile = tiles[1];\n\n    geopoi_layer.options.xtile_center = xtile;\n    geopoi_layer.options.ytile_center = ytile;\n    geopoi_layer.setUrl(geopoi_url);\n\n\n    $(\"#final-lat\").text(lat);\n    $(\"#final-lon\").text(lng);\n    $(\"#tile-x\").text(xtile);\n    $(\"#tile-y\").text(ytile);\n};\n\n/*\n* Geolocation on the map\n*/\nvar onLocationFound = function(e) {\n    var radius = e.accuracy / 2;\n\n    var gemIcon = new L.icon({\n        iconUrl: './images/red_18x18.png' ,\n        iconSize:     [12, 12],\n    });\n\n    var map;\n    for ( var layer_id in e.target._layers )  {\n        map = e.target._layers[layer_id]._map;\n        break;\n    }\n\n    L.marker(e.latlng, {icon: gemIcon}).addTo(map);\n\n    L.circle(e.latlng, radius).addTo(map);\n};\n\nvar onLocationError = function(e) {\n    alert(e.message);\n};\n\n/*\n* Position from the url hash\n*/\nfunction getPositionFromHash() {\n    var arr = window.location.hash.split('/');\n\n    var zoom = arr[0].replace('#', '');\n    var lon = arr[1];\n    var lat = arr[2];\n\n    if ( !jQuery.isNumeric(zoom)  ) {\n        zoom = 6;\n    }\n    if ( !jQuery.isNumeric(lon)  ) {\n        lon = 42.302;\n    }\n    if ( !jQuery.isNumeric(lat)  ) {\n        lat = 10.261;\n    }\n    return [zoom, lat, lon];\n}\n\n/*\n* Get url parameters\n* taken from:\n* http://www.jquerybyexample.net/2012/06/get-url-parameters-using-jquery.html\n*/\nfunction getURLParameter(sParam) {\n    var sPageURL = window.location.search.substring(1);\n    var sURLVariables = sPageURL.split('&');\n    var i, sParameterName;\n\n    for (i = 0; i < sURLVariables.length; i = i + 1) {\n        sParameterName = sURLVariables[i].split('=');\n        if (sParameterName[0] === sParam) {\n            return sParameterName[1];\n        }\n    }\n}\n\nfunction toggleIt(element) {\n    $('#' + element).slideToggle( 'slow' );\n}\n"]}